
战斗相关
    ag.class

发送系统消息
    a3.bE.cJ.jdMethod_do(str1 + str3);


    0xa6 if_acmpne   比较栈顶两引用型数值，当结果不相等时跳转       if
    0xb2 getstatic   获取指定类的静态域，并将其值压入栈顶 
    0xb4 getfield   获取指定类的实例域，并将其值压入栈顶 
    0x12 ldc             将int, float或String型常量值从常量池中推送至栈顶    
    0x13 ldc_w           将int, float或String型常量值从常量池中推送至栈顶（宽索引）    
    0x14 ldc2_w          将long或double型常量值从常量池中推送至栈顶（宽索引）    
    0xb6 invokevirtual   调用实例方法  
    0x2a aload_0            将第一个引用类型本地变量推送至栈顶    
    
    if (this == a3.bE.cZ)   
        对应字节码
            4203	aload_0	                //将第一个引用类型本地变量推送至栈顶
            4204	getstatic	a3/bE Lh;   //读取a3.bE的属性 在类文件h中
            4207	getfield	h/cZ Lag;   //读取this
            4210	if_acmpne	1920        //对比


    // 一个静态方法的调用过程  
    a3.bE.fj.setColor(13619151);
        对应字节码
            4260	getstatic	a3/bE Lh;                                 //获取指定类的静态域，并将其值压入栈顶 
            4263	getfield	h/fj Ljavax/microedition/lcdui/Graphics;  //获取指定类的实例域，并将其值压入栈顶 
            4266	ldc_w	13619151                                       //传参
            4269	invokevirtual	javax/microedition/lcdui/Graphics/setColor(I)V      //调用


    jdMethod_if((byte)16, 1);
        对应字节码
            4401	aload_0	
            4402	bipush	16
            4404	iconst_1	
            4405	invokevirtual	a3/if(BI)V


//********HELO相关指令 搜索技巧*********** */
    invokevirtual h/a       搜索调用了 h类中的a方法的文件
    invokevirtual h/i(S)[B        S 表示short参数 [B 表示返回类型是字节数组byte[]
     
    invokevirtual h/a(Ljava.lang.StringIII)V

    参数类型对照表 括号后面的是返回值
    short       S
    byte        B
    byte[]      [B    
    V           void
    字符串      Ljava.lang.String       L代表长字节
    boolean     Z    布尔类型

    h.a(IIIIIIII)Z

    调用参考
    invokevirtual foo/bar/bla()Ljava/lang/String;


h.class
    读档写档 载入素材
    ？游戏主要逻辑存放

存档字符串文件路径
static final String E = "OPTION";
static final String c6 = "PLAYER1";
static final String cC = "PLAYER2";
static final String da = "RESLIST1";
static final String e7 = "RES1";            服务器取回的临时存档文件


存档相关变量
    this.e4     存档读入的值处理后的状态值

RESLIST1 & RES1
    public void T()     //初始化存档 清空删除


RESLIST1 存档处理相关函数
    public void a()     处理存档 更新存档和相关存档变量this.e4
    public void l()     写出存档
    public void G()     读入存档


RES1 地图存档处理相关函数
    public short a(byte[] paramArrayOfByte, int paramInt)   写出存档
    public byte[] i(short paramShort)                       读入存档

    invokevirtual h/i       搜索调用了 h类中的a方法的文件
    10446 invokevirtual #724 <h/i(S)[B>         [B 表示返回类型是byte[] 字节数组
    invokevirtual h/i(S)[B 

    174 invokevirtual #474 <h/a(SSBB)V>        
    调用了h类中的a方法包含了4个参数 类型分别是 short short byte byte


G类中产生了读图操作
返回字节到变量 this.lR


10446 invokevirtual #724 <h/i(S)[B>

a\([A-z1-9]*, [A-z1-9]*, [A-z1-9]*, [A-z1-9]*\)




if ((i12 != -1) && (this.bh.d8[this.jdField_if] == i12))
{
  this.bh.am = this.bh.jdMethod_else(this.jdField_if);
  if (this.bh.am != -1)
  {
    this.lR = this.bh.i(this.bh.am);
    if ((this.lR != null) && (q.a(this.lR, 0, this.lR.length) == this.bh.P(this.jdField_if))) {
      this.bo = true;
    } else {
      this.lR = null;
    }
  }
}