//------------------------------------------------
//--- 010 Editor v8.0.1
//
//      File: 515
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: .rms
//  ID Bytes: 
//   History: 
//------------------------------------------------


BigEndian();

//当前地图信息
typedef  struct  {
            int16 l <comment="字符长度">;
            char an [l]<comment="当前地图名字">;
	//修改后会导致传送点无法使用 屏幕菜单无法点击打开0
            byte n1 <comment="UI相关">;
	//修改后屏幕会没有怪   猜测和上面的属性是用来调试用的
	 byte n1 <comment="怪物不显示">;
	//可修改地图瞬间移动
	//一张图x长度是0-19 大于19就会移动到下一行
	//值/20=y...x    值/地图宽度=y坐标...余数x坐标
	// 30/20=1...10	得到的坐标就是10/1
	 int16 xy <comment="复位坐标/20">;
            int16 d1 <comment="结束符？修改会卡屏se可恢复">;
	//注意 有些传送点是2个并排在一起的
	//一般在第二个传送点上的标识用作提示文本
//,format=binary
            int16 csdxy <comment="传送点在地图坐标">;
            int16 a3 <comment="地图标识 用作触发传送点提示文本">;
}Map <open=true, optimize=false>;

//坐标点结构
typedef struct  {
            int16 la <comment="字符长度">;
            char an [la]<comment="当前地图名字">;
            int16 csdxy <comment="传送点在地图坐标">;
            int16 a3 <comment="地图标识 用作触发传送点提示文本">;
	//1414好像是地图结束符
} MiMap <open=true, optimize=false>;

//未知数据 地图相关
typedef struct {
            int16 len <comment="字符长度">;
            char name[len] <comment="当前地图名字">;
            //设置字体颜色
            SetForeColor(cRed);  
            //设置背景色
            int16 x <comment="怪密度/怪上限?/怪刷新cd?",bgcolor=0x000000>;
            SetForeColor(cNone);  
} Mn <open=true, optimize=false>;

//未知数据 地图相关
typedef struct {
            int16 len <comment="字符长度">;
	 int16 len <comment="字符长度">;
            char name [len] <comment="当前地图名字">;
            //设置字体颜色
            SetForeColor(cRed);  
            //设置背景色
            int16 x <comment="怪密度/怪上限?/怪刷新cd?",bgcolor=0x000000>;
            SetForeColor(cNone);  
} Mnn <open=true, optimize=false>;



//怪物信息
typedef struct (int offset){
	//跳到指定位置
            FSeek(offset); 
           int16 x <comment="怪物的种类数量">;
       	struct nG {
	        int16 x <comment="怪物ID？">;
                    int16 len <comment="字符长度">;
                    char namea [len]<comment="怪名字">;
	         byte dlen <comment="属性条目数量?未知属性">;
                    int d <comment="魔法">;	
                    int d <comment="生命">;
                    int16 d <comment="物攻">;	
                    int16 d <comment="物防">;	
                    int16 d <comment="魔攻">;	
                    int16 d <comment="魔防">;
	         int16 dd <comment="使用魔法的几率越高越大">;
		//少攻击使用异常技能多
		
                    int16 dd <comment="智能程度有所下降">;	
                    int16 dd <comment="未知属性">;	
                    int16 dd <comment="未知属性">;	
                    int16 dd <comment="未知属性">;	
	
	         int16 dd <comment="速度">;	
	         int16 dd <comment="未知属性">;	
		int16 dd <comment="智能程度？值越低越贴人">;	
                    int16 dd <comment="未知属性">;	

	}ng[x]<open=true, optimize=false> ;

}Ggg<open=true, optimize=false>;

/*
//地图信息结束标识是95
//怪物属性后面的很大可能是地图图块的分布数据
int16 a <comment="地图信息长度">;

//当前地图信息
SetBackColor( cRed );
Map m;


SetBackColor( cGreen );
//其余传送点
local byte ii=0;
while(true)  
{  
    MiMap c;
    if (c.a3==5140)break;
}  

//01 80 0D 80   图块开始标识
//目前修改会被还原存档 只能重启客户端  应该是修改后会产生一个全局变量来记录用户存在过修改动作  从这个变量来控制还原存档
//也有可能是图片的色带信息 色深

int hb <comment="图块标识",fgcolor=cRed,bgcolor=cBlue>;
int16 aaaa[20*20-2] <comment="图块",bgcolor=cBlue>;
SetBackColor( cRed );
byte b <comment="图块结束">;
int16 b <comment="大小端？",fgcolor=cGreen>;
if(b==0x100) LittleEndian();

int16 len <comment="长度">;
SetBackColor( cNone );
Printf("%X-%d",len,len);
byte ccc[len] <comment="?",bgcolor=cGreen>;

*/
/*
颜色值

cBlack - 0x000000 
cRed - 0x0000ff 
cDkRed - 0x000080 
cLtRed - 0x8080ff 
cGreen - 0x00ff00 
cDkGreen - 0x008000 
cLtGreen - 0x80ff80 
cBlue - 0xff0000 
cDkBlue - 0x800000 
cLtBlue - 0xff8080 
cPurple - 0xff00ff 
cDkPurple - 0x800080 
cLtPurple - 0xffe0ff 
cAqua - 0xffff00 
cDkAqua - 0x808000 
cLtAqua - 0xffffe0 
cYellow - 0x00ffff 
cDkYellow - 0x008080 
cLtYellow - 0x80ffff 
cDkGray - 0x404040 
cGray - 0x808080, 
cSilver - 0xc0c0c0, 
cLtGray - 0xe0e0e0 
cWhite - 0xffffff 
cNone - 0xffffffff 

*/

/*
怪物数据出现位置
旁加
	掩体西部1	4872
	掩体东区1	4927

	163兵工厂100怪	2601

西蒙
	西蒙开采场1区	4845

主城
	新手仓		4331

*/

//怪物信息
Ggg g(4331);


//修改这个可以连接到任何传送点
/*
05	训练仓
04	新手仓
06	空间站中心区
*/
//01 00 06 01 00
byte x <comment="内部传送点信息开始标识">;
int16 x <comment="？">;
int16 x <comment="？">;
int16 x <comment="传送点链接代码">;
int16 xy <comment="进入上方的传送点后的坐标">;
byte y <comment="未知属性 0或-1可以过图">;




//,hidden=true

//, optimize=false

//Printf("%i\n",FTell());
//Printf("%i\n",ReadShort());


  /*                    int16 d1 <comment="魔防">;
                    int16 d1 <comment="魔防">;
                    int16 d1 <comment="魔防">;
                    int16 d1 <comment="魔防">;
                    int16 d1 <comment="魔防">;
                    int16 d1 <comment="魔防">;
                    int16 d1 <comment="魔防">;
*/
	

//顺序：在声明模板变量后，当前文件指针后移，通过FTell获取当前位置，通过FSeek FSkip移动指针  通过ReadByte ReadShort ReadInt任意读取而不移动指针
// FSeek(5);  	设置指针位置		

// FSkip(5);  	递增  当前指针增加5个字节


//SetCursorPos()  GetCursorPos()  文件指针？ 
//Printf("%i-%i\n",GetCursorPos(),FTell());