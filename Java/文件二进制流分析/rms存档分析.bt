//------------------------------------------------
//--- 010 Editor v8.0.1
//
//      File: 515
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: .rms
//  ID Bytes: 
//   History: 
//------------------------------------------------

//存档大概结构
//1 地形相关(场景)信息（传送点坐标 怪物数量 怪物分布? 图块信息？）
//2 场景素材二进制流？ 
//3 怪物信息（名称 属性）
//4 场景文本（对话 提示等）

// 左下角为0，0
// 艾尔冈丛林入口1 怪数量10 32经验 0x20
// 艾尔冈丛林入口2 怪数量20 32经验 0x20


//大端开始
BigEndian();
/*====================================================
当前地图信息
*====================================================*/
typedef  struct  {
    //地图信息结束标识是95
    //怪物属性后面的很大可能是地图图块的分布数据
    int16 a <comment="地图信息长度">;

    int16 l <comment="字符长度">;
    char an [l]<comment="当前地图名字">;
    //修改后会导致传送点无法使用 屏幕菜单无法点击打开0
    byte n1 <comment="UI相关">;
    //修改后屏幕会没有怪   猜测和上面的属性是用来调试用的
    byte n1 <comment="怪物不显示">;
    //可修改地图瞬间移动
    //一张图x长度是0-19 大于19就会移动到下一行
    //值/20=y...x    值/地图宽度=y坐标...余数x坐标
    // 30/20=1...10	得到的坐标就是10/1
    int16 xy <comment="复位坐标/20">;
    //可能是游戏状态？
    int16 d1 <comment="结束符？修改会卡屏se可恢复">;
    //注意 有些传送点是2个并排在一起的
    //一般在第二个传送点上的标识用作提示文本
    //,format=binary
    int16 csdxy <comment="传送点在地图坐标">;
    int16 a3 <comment="地图标识 用作传送代码/触发传送点提示文本">;


    /*====================================================
    坐标点结构
    *====================================================*/
    typedef struct  {
        int16 la <comment="字符长度">;
        //有些隐藏的传送点可能是备用的 特性是255 未命名
        char an [la]<comment="当前地图名字">;
        //最后一个是怪密度",	
        int16 csdxy <comment="传送点在地图坐标/怪密度",bgcolor=0x80FF80>;
        int16 a3 <comment="地图标识 用作触发传送点提示文本">;
        //1414好像是地图结束符
    } MiMap <open=true, optimize=false>;

    //其余传送点
    while(true)  
    {  
        MiMap c;
	    //4111是副本地图结束符号
	//5652  旁加行星 1-15级升级用
	//3857 老布 驿站总开关 客体杀手
//2580 驿站中央通道
        if (c.a3==5140 || c.a3==4111|| c.a3==5139 || c.a3==5652 || c.a3==3857 || c.a3==2580 )break;
    }  



}Map <open=true, optimize=false>;

/*====================================================
NPC
*==============*/
typedef struct (){

        int16 nLen <comment="npc名字长度">;
        char npcName [nLen]<comment="怪名字">;
        int16 nn <comment="npc所在坐标？">;
        byte ulen <comment="怪物的种类数量">;
        int16 nn <comment="未知">;
        byte nn <comment="未知">;

}NPC<open=true, optimize=false>;


/*====================================================
直接读取怪物相关属性
*====================================================*/
void getUnit (string s){
        local int offset=FindFirst(s);
	if(offset==-1)return;
       //跳到指定位置
       FSeek(offset-4); 
        int16 x <comment="怪物ID/等级？">;
        int16 len <comment="字符长度">;
        char name [len]<comment="怪名字">;
        byte dlen <comment="怪物黄槽/ID/等级？">;
        int d <comment="魔法">;	
        int d <comment="生命",fgcolor=0x0000FF>;
        int16 d <comment="物攻",fgcolor=0x0000FF>;
        int16 d <comment="物防">;	
        int16 d <comment="魔攻",fgcolor=0x0000FF>;
        int16 d <comment="魔防">;
        //内存中在这里断开了 应该是结束符
        int16 dd <comment="结束符？/使用魔法的几率越高越大">;
         int16 dd <comment="智能程度有所下降">;	
        int16 dd <comment="未知属性">;	
        int16 dd <comment="未知属性">;	
        int16 dd <comment="未知属性">;	

        int16 dd <comment="速度",fgcolor=0x0000FF>;	
        int16 dd <comment="未知属性">;	
        int16 dd <comment="智能程度？值越低越贴人">;	
        int16 dd <comment="未知属性">;	
};

/*====================================================
怪物信息
*====================================================*/
typedef struct (){

    //搜索字符串 返回所在位置
    local int64 offset=FindFirst("IEND");
    local int tmp;       
    while(tmp != -1)
    {	
        Printf("%d\n",offset);
        //寻找下一个
        tmp = FindNext() ;
        if( tmp != -1) offset = tmp ;
        
    };

    //跳到指定位置
    FSeek(offset); 

    char h[4] <comment="地图资源结束标识">;
    int gw <comment="怪物数据开始标识">;	
    //记录当前偏移
    local int ft = FTell();

  //处理一些有NPC的地图
   // local int npc=FindFirst("西蒙领地");

    local byte isnpc=ReadByte();
   Printf("%d",isnpc);
    //如果没找到返回
if(isnpc == 1) 
{
    getUnit("海盗舰长");
 
    local int npclb2=FindFirst("驿站中央通道");
    if(npclb2 != -1)
    {
    int16 nn <comment="未知">;
    int16 ulen <comment="怪物的种类数量">;
    }
    
    local int npcxm=FindFirst("西蒙荒漠2");
    if(npcxm != -1)
    {
    NPC npc;
    int16 nn <comment="未知">;
    }
    local int npchd=FindFirst("劫掠者I号");
    //如果没找到返回
    if(npchd != -1) 
    {
    
    NPC npc[nx];
    byte ulen <comment="怪物的种类数量">;
    }
}

else int16 ulen <comment="怪物的种类数量">;

   //旁加行星  掩体西区 处理 跳过
    local int isyt=FindFirst("掩体西区1");
   if(isyt != -1){
        Printf("\n%d",666666);
         FSkip(4);
        int16 ulen <comment="怪物的种类数量">;
   }



    struct nG {
        int16 x <comment="怪物ID">;
        int16 len <comment="字符长度">;
        char name [len]<comment="怪名字">;
        byte dlen <comment="怪物等级">;
        int d <comment="魔法">;	
        int d <comment="生命",fgcolor=0x0000FF>;
        int16 d <comment="物攻",fgcolor=0x0000FF>;
        int16 d <comment="物防">;	
        int16 d <comment="魔攻",fgcolor=0x0000FF>;
        int16 d <comment="魔防">;
        //内存中在这里断开了 应该是结束符
        int16 dd <comment="结束符？/使用魔法的几率越高越大">;
        //少攻击使用异常技能多

        int16 dd <comment="智能程度有所下降">;	
        int16 dd <comment="未知属性">;	
        int16 dd <comment="未知属性">;	
        int16 dd <comment="未知属性">;	

        int16 dd <comment="速度",fgcolor=0x0000FF>;	
        int16 dd <comment="未知属性">;	
        int16 dd <comment="智能程度？值越低越贴人">;	
        int16 dd <comment="未知属性">;	

    }ng[ulen]<open=true, optimize=false> ;

}Ggg<open=true, optimize=false>;

//====================================================
//01 80 0D 80   图块开始标识
//目前修改会被还原存档 只能重启客户端  应该是修改后会产生一个全局变量来记录用户存在过修改动作  从这个变量来控制还原存档
//也有可能是图片的色带信息 色深
//地图信息结束标识是95
//怪物属性后面的很大可能是地图图块的分布数据
//=====================================================
typedef struct {
    int hb <comment="图块标识",fgcolor=cRed,bgcolor=cBlue>;
    int16 aaaa[20*20-2] <comment="图块",bgcolor=cBlue>;
    SetBackColor( cRed );
    byte b <comment="图块结束">;
    int16 b <comment="大小端？",fgcolor=cGreen>;
    if(b==0x100) LittleEndian();
    
    int16 len <comment="长度">;
    SetBackColor( cNone );
    Printf("%X-%d",len,len);
    byte ccc[len] <comment="?",bgcolor=cGreen>;
} blok;

//当前地图信息
Map m;

//怪物信息
Ggg g;

//修改这个可以连接到任何传送点
/*
05	训练仓
04	新手仓
06	空间站中心区

52	161号兵工内部北门
51	161号兵工厂内部
*/
byte x <comment="内部传送点信息开始标识">;
int16 x <comment="？">;
int16 x <comment="？">;
int16 x <comment="传送点链接代码">;
int16 xy <comment="进入上方的传送点后的坐标">;
byte y <comment="未知属性 0或-1可以过图">;



/*
怪物数据出现位置
旁加
	掩体西部1	4872
	掩体东区1	4927

	163兵工厂100怪	2601

西蒙
	西蒙开采场1区	4845

主城
	新手仓		4331

乱石丘陵2	59
*/





//,hidden=true
//, optimize=false

//顺序：在声明模板变量后，当前文件指针后移，通过FTell获取当前位置，通过FSeek FSkip移动指针  
//通过ReadByte ReadShort ReadInt任意读取而不移动指针

// FSeek(5);  	设置指针位置		
// FSkip(5);  		递增  当前指针增加5个字节
// FTell()      		指针当前位置

//SetCursorPos()  GetCursorPos()  文件指针？ 
//Printf("%i-%i\n",GetCursorPos(),FTell());




/*
颜色值

cBlack - 0x000000 
cRed - 0x0000ff 
cDkRed - 0x000080 
cLtRed - 0x8080ff 
cGreen - 0x00ff00 
cDkGreen - 0x008000 
cLtGreen - 0x80ff80 
cBlue - 0xff0000 
cDkBlue - 0x800000 
cLtBlue - 0xff8080 
cPurple - 0xff00ff 
cDkPurple - 0x800080 
cLtPurple - 0xffe0ff 
cAqua - 0xffff00 
cDkAqua - 0x808000 
cLtAqua - 0xffffe0 
cYellow - 0x00ffff 
cDkYellow - 0x008080 
cLtYellow - 0x80ffff 
cDkGray - 0x404040 
cGray - 0x808080, 
cSilver - 0xc0c0c0, 
cLtGray - 0xe0e0e0 
cWhite - 0xffffff 
cNone - 0xffffffff 

*/